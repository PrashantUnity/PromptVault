@page "/generator"
@using PromptsValut.Constants
@using PromptsValut.Components.UI
@using PromptsValut.Components.Modals

<PageTitle>Prompt Generator - PromptVault</PageTitle>

<div class="max-w-4xl mx-auto p-4">
    <!-- Header -->
    <div class="mb-8">
        <div class="flex items-center gap-3 mb-4">
            <div class="w-10 h-10 bg-gradient-to-br from-purple-600 to-blue-600 rounded-lg flex items-center justify-center shadow-lg">
                @((MarkupString)SvgIcons.GetIcon("wand", "h-6 w-6 text-white"))
            </div>
            <div>
                <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Prompt Generator</h1>
                <p class="text-gray-600 dark:text-gray-400">Create and customize AI prompts for your projects</p>
            </div>
        </div>
        
    </div>

    <!-- Generator Form -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 shadow-sm">
        <form @onsubmit="GeneratePrompt" class="space-y-6">
            <!-- Basic Information -->
            <div class="space-y-4">
                <h3 class="text-lg font-semibold flex items-center gap-2 text-gray-900 dark:text-gray-100">
                    @((MarkupString)SvgIcons.GetIcon("info", "h-5 w-5 text-blue-500 dark:text-blue-400"))
                    Basic Information
                </h3>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Title *</label>
                        <input @bind="promptTemplate.Title" type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Enter prompt title" required />
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Category *</label>
                        @if (PromptService.Categories.Any())
                        {
                            <select @bind="promptTemplate.Category" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required>
                                <option value="">Select a category</option>
                                @foreach (var category in PromptService.Categories.Where(c => c.Id != "all"))
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        }
                        else
                        {
                            <div class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-600 text-gray-500 dark:text-gray-400 rounded-md flex items-center gap-2">
                                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500"></div>
                                Loading categories...
                            </div>
                        }
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Description</label>
                    <textarea @bind="promptTemplate.Description" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" rows="2" placeholder="Brief description of what this prompt does"></textarea>
                </div>
            </div>

            <!-- Prompt Content -->
            <div class="space-y-4">
                <h3 class="text-lg font-semibold flex items-center gap-2 text-gray-900 dark:text-gray-100">
                    @((MarkupString)SvgIcons.GetIcon("file-text", "h-5 w-5 text-green-500 dark:text-green-400"))
                    Prompt Content
                </h3>
                
                <div>
                    <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Content Template *</label>
                    
                    <!-- Interactive Content Tools -->
                    <div class="mb-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600">
                        <div class="flex flex-wrap gap-2">
                            <!-- Text Formatting -->
                            <div class="flex gap-1 border-r border-gray-300 dark:border-gray-600 pr-2 mr-2">
                                <button type="button" @onclick="@(() => InsertText("**", "**"))" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Bold">
                                    <strong>B</strong>
                                </button>
                                <button type="button" @onclick="@(() => InsertText("*", "*"))" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Italic">
                                    <em>I</em>
                                </button>
                                <button type="button" @onclick="@(() => InsertText("`", "`"))" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Code">
                                    &lt;/&gt;
                                </button>
                            </div>
                            
                            <!-- Lists -->
                            <div class="flex gap-1 border-r border-gray-300 dark:border-gray-600 pr-2 mr-2">
                                <button type="button" @onclick="InsertBulletList" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Bullet List">
                                    â€¢ List
                                </button>
                                <button type="button" @onclick="InsertNumberedList" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Numbered List">
                                    1. List
                                </button>
                            </div>
                            
                            <!-- Structure -->
                            <div class="flex gap-1 border-r border-gray-300 dark:border-gray-600 pr-2 mr-2">
                                <button type="button" @onclick="InsertHeading" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Heading">
                                    H1
                                </button>
                                <button type="button" @onclick="InsertQuote" class="px-2 py-1 text-xs bg-white dark:bg-gray-600 border border-gray-300 dark:border-gray-500 rounded hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors" title="Quote">
                                    "
                                </button>
                            </div>
                            
                    <!-- Common Placeholders -->
                    <div class="flex gap-1 items-center">
                        <select id="placeholderSelect" @onchange="OnPlaceholderSelected" class="px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-700 rounded text-blue-800 dark:text-blue-200 focus:outline-none focus:ring-1 focus:ring-blue-500">
                            <option value="">Add Placeholder</option>
                            <option value="topic">Topic</option>
                            <option value="tone">Tone</option>
                            <option value="audience">Audience</option>
                            <option value="length">Length</option>
                            <option value="style">Style</option>
                            <option value="format">Format</option>
                            <option value="language">Language</option>
                            <option value="purpose">Purpose</option>
                            <option value="context">Context</option>
                            <option value="company">Company</option>
                            <option value="product">Product</option>
                            <option value="service">Service</option>
                            <option value="industry">Industry</option>
                            <option value="location">Location</option>
                            <option value="date">Date</option>
                            <option value="time">Time</option>
                            <option value="budget">Budget</option>
                            <option value="timeline">Timeline</option>
                            <option value="goal">Goal</option>
                            <option value="objective">Objective</option>
                            <option value="task">Task</option>
                            <option value="description">Description</option>
                        </select>
                        <button type="button" @onclick="ShowMultiOptionDialog" class="px-2 py-1 text-xs bg-purple-100 dark:bg-purple-900/30 border border-purple-300 dark:border-purple-700 rounded hover:bg-purple-200 dark:hover:bg-purple-800 transition-colors text-purple-800 dark:text-purple-200" title="Add Multi-Option Placeholder">
                            [A/B/C]
                        </button>
                        <button type="button" @onclick="@(() => InsertPlaceholder("topic"))" class="px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-700 rounded hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors text-blue-800 dark:text-blue-200" title="Add Topic Placeholder">
                            [topic]
                        </button>
                    </div>
                        </div>
                    </div>
                    
                    <textarea @bind="promptTemplate.Content" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm" rows="8" placeholder="Enter your prompt template here. Use [placeholder] for dynamic content..." required></textarea>
                    <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Use [placeholder] syntax for dynamic content (e.g., [topic], [tone], [length])</p>
                </div>
                
            </div>

            <!-- Advanced Settings -->
            <div class="space-y-4">
                <h3 class="text-lg font-semibold flex items-center gap-2 text-gray-900 dark:text-gray-100">
                    @((MarkupString)SvgIcons.GetIcon("settings", "h-5 w-5 text-orange-500 dark:text-orange-400"))
                    Advanced Settings
                </h3>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Difficulty</label>
                        <select @bind="promptTemplate.Difficulty" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="beginner">Beginner</option>
                            <option value="intermediate">Intermediate</option>
                            <option value="advanced">Advanced</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Estimated Time</label>
                        <input @bind="promptTemplate.EstimatedTime" type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="e.g., 5-10 minutes" />
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Author</label>
                        <input @bind="promptTemplate.Author" type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Your name" />
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Tags (comma-separated)</label>
                    <input @bind="tagsInput" type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="e.g., email, marketing, campaign" />
                </div>
                
                <div>
                    <label class="block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">Usage Notes</label>
                    <textarea @bind="promptTemplate.UsageNotes" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" rows="3" placeholder="Any special instructions or tips for using this prompt"></textarea>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex items-center justify-center gap-4 pt-6 border-t border-gray-200 dark:border-gray-700">
                <button type="submit" class="px-8 py-3 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-lg hover:from-purple-700 hover:to-blue-700 transition-all duration-200 flex items-center gap-2 text-lg font-medium shadow-lg hover:shadow-xl">
                    @((MarkupString)SvgIcons.GetIcon("wand", "h-5 w-5"))
                    Generate Prompt
                </button>
                <button type="button" @onclick="PreviewPrompt" class="px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-all duration-200 flex items-center gap-2 font-medium shadow-lg hover:shadow-xl">
                    @((MarkupString)SvgIcons.GetIcon("eye", "h-5 w-5"))
                    Preview
                </button>
            </div>
        </form>
    </div>


    <!-- Generated Prompt JSON -->
    @if (!string.IsNullOrEmpty(generatedPrompt))
    {
        <div class="mt-8 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 shadow-sm">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold flex items-center gap-2 text-gray-900 dark:text-gray-100">
                    @((MarkupString)SvgIcons.GetIcon("code", "h-5 w-5 text-blue-500 dark:text-blue-400"))
                    Generated Prompt JSON
                </h3>
                <span class="text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full">JSON Format</span>
            </div>
            <div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-4 font-mono text-sm whitespace-pre-wrap text-gray-900 dark:text-gray-100 border border-gray-200 dark:border-gray-700 overflow-x-auto">@generatedPrompt</div>
            <div class="mt-4 flex gap-2">
                <button @onclick="CopyToClipboard" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md flex items-center gap-2 transition-colors">
                    @((MarkupString)SvgIcons.GetIcon("copy", "h-4 w-4"))
                    Copy JSON
                </button>
                <button @onclick="ClearPreview" class="px-4 py-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center gap-2 transition-colors">
                    @((MarkupString)SvgIcons.GetIcon("x", "h-4 w-4"))
                    Clear
                </button>
            </div>
        </div>
    }
</div>

<!-- Snackbar Notifications -->
<Snackbar @ref="snackbar" IsVisible="showSnackbar" Title="@snackbarTitle" Message="@snackbarMessage" Type="@snackbarType" OnHide="OnSnackbarHide" />

<!-- Prompt Detail Modal -->
<PromptDetailModal @ref="promptDetailModal" IsVisible="showPromptDetail" OnClose="ClosePromptDetail" />

<!-- Multi-Option Placeholder Modal -->
@if (showMultiOptionDialog)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" @onclick="CloseMultiOptionDialog">
        <div class="bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-hidden" @onclick:stopPropagation="true">
            <!-- Header -->
            <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20">
                <div class="flex items-center gap-3">
                    <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center">
                        @((MarkupString)SvgIcons.GetIcon("plus", "h-4 w-4 text-white"))
                    </div>
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Add Multi-Option Placeholder</h3>
                </div>
                <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">Create placeholders with multiple choices like [tone/Professional/Casual/Friendly]</p>
            </div>
            
            <!-- Content -->
            <div class="p-6 overflow-y-auto max-h-[calc(90vh-140px)]">
                <div class="space-y-6">
                    <!-- Placeholder Name -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Placeholder Name
                            <span class="text-red-500">*</span>
                        </label>
                        <input @bind="multiOptionName" 
                               @bind:event="oninput"
                               type="text" 
                               class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200" 
                               placeholder="e.g., tone, style, level, priority" />
                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">This will be the main placeholder name</p>
                    </div>
                    
                    <!-- Options -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Options
                            <span class="text-red-500">*</span>
                        </label>
                        <input @bind="multiOptionValues" 
                               @bind:event="oninput"
                               type="text" 
                               class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200" 
                               placeholder="e.g., Professional, Casual, Friendly, Formal" />
                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Separate each option with a comma</p>
                    </div>
                    
                    <!-- Preview -->
                    <div class="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
                        <div class="flex items-center gap-2 mb-2">
                            @((MarkupString)SvgIcons.GetIcon("eye", "h-4 w-4 text-blue-600 dark:text-blue-400"))
                            <span class="text-sm font-medium text-blue-800 dark:text-blue-200">Live Preview</span>
                        </div>
                        <div class="bg-white dark:bg-gray-800 rounded-md p-3 border border-blue-200 dark:border-blue-700">
                            <code class="text-sm font-mono text-blue-600 dark:text-blue-400 break-all">
                                @if (!string.IsNullOrEmpty(multiOptionName) && !string.IsNullOrEmpty(multiOptionValues))
                                {
                                    var options = multiOptionValues.Split(',', StringSplitOptions.RemoveEmptyEntries)
                                        .Select(opt => opt.Trim())
                                        .ToArray();
                                    var preview = $"[{multiOptionName}/{string.Join("/", options)}]";
                                    @preview
                                }
                                else
                                {
                                    <span class="text-gray-400">[placeholder/option1/option2/option3]</span>
                                }
                            </code>
                        </div>
                    </div>
                    
                    <!-- Examples -->
                    <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
                        <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Examples:</h4>
                        <div class="space-y-1 text-xs text-gray-600 dark:text-gray-400">
                            <div><code class="bg-white dark:bg-gray-700 px-2 py-1 rounded">[tone/Professional/Casual/Friendly]</code></div>
                            <div><code class="bg-white dark:bg-gray-700 px-2 py-1 rounded">[level/Beginner/Intermediate/Advanced]</code></div>
                            <div><code class="bg-white dark:bg-gray-700 px-2 py-1 rounded">[priority/Low/Medium/High/Critical]</code></div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Footer -->
            <div class="px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800/50">
                <div class="flex gap-3 justify-end">
                    <button @onclick="CloseMultiOptionDialog" 
                            class="px-6 py-2.5 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-200 font-medium">
                        Cancel
                    </button>
                    <button @onclick="InsertMultiOption" 
                            class="px-6 py-2.5 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white rounded-lg transition-all duration-200 font-medium shadow-lg hover:shadow-xl">
                        @((MarkupString)SvgIcons.GetIcon("plus", "h-4 w-4 mr-1"))
                        Insert Placeholder
                    </button>
                </div>
            </div>
        </div>
    </div>
}