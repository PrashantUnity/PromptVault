@using PromptsValut.Constants

<div class="prompt-card-enhanced group cursor-pointer stagger-item @GetCategoryGradientClasses(Prompt.Category)">
    <!-- Card Header with Title and Actions -->
    <div class="flex items-start justify-between mb-3">
        <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-100 line-clamp-1 group-hover:text-gray-900 dark:group-hover:text-white transition-colors duration-300 flex-1 pr-2">
            @Prompt.Title
        </h3>
        <div class="flex items-center gap-1">
            <button 
                @onclick="() => ToggleFavorite()"
                class="p-1 rounded-lg hover:bg-gray-200/50 dark:hover:bg-white/20 transition-colors duration-200 @(IsFavorite ? "text-red-600 dark:text-red-400" : "text-gray-600 dark:text-gray-300")"
                title="@(IsFavorite ? "Remove from favorites" : "Add to favorites")">
                @((MarkupString)SvgIcons.Heart)
            </button>
            <button 
                @onclick="() => SetRating(5)"
                class="p-1 rounded-lg hover:bg-gray-200/50 dark:hover:bg-white/20 transition-colors duration-200 text-gray-600 dark:text-gray-300"
                title="Rate this prompt">
                @((MarkupString)SvgIcons.Star)
            </button>
        </div>
    </div>
    
    <!-- Category and Difficulty Tags -->
    <div class="flex items-center gap-2 mb-3">
        <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium @GetCategoryTagClasses(Prompt.Category)">
            @GetCategoryName(Prompt.Category)
        </span>
        @if (!string.IsNullOrEmpty(Prompt.Difficulty))
        {
            <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium @GetDifficultyTagClasses(Prompt.Difficulty)">
                @Prompt.Difficulty
            </span>
        }
    </div>
    
    <!-- Description in White Box -->
    <div class="bg-white/95 backdrop-blur-sm rounded-xl p-4 mb-3 shadow-lg">
        <p class="text-sm text-gray-700 line-clamp-6 leading-relaxed">
            @Prompt.Description
        </p>
    </div>
    
    <!-- Hashtags -->
    @if (Prompt.Tags.Any())
    {
        <div class="flex flex-wrap gap-1.5 mb-3">
            @foreach (var tag in Prompt.Tags.Take(4))
            {
                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-700 dark:bg-purple-900/30 dark:text-purple-300">
                    #@tag
                </span>
            }
            @if (Prompt.Tags.Length > 4)
            {
                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-700 dark:bg-purple-900/30 dark:text-purple-300">
                    +@(Prompt.Tags.Length - 4)
                </span>
            }
        </div>
    }
    
    <!-- Action Buttons -->
    <div class="flex items-center gap-2 mt-auto">
        <button 
            @onclick="() => CopyPrompt()"
            class="flex-1 bg-purple-600 hover:bg-purple-700 text-white font-medium py-2.5 px-3 rounded-lg transition-all duration-200 flex items-center justify-center gap-1.5 shadow-lg hover:shadow-xl"
            title="Copy Prompt">
            @((MarkupString)SvgIcons.Copy)
            <span>Copy</span>
        </button>
        <button 
            @onclick="() => ViewPrompt()"
            class="bg-gray-200/80 dark:bg-white/20 hover:bg-gray-300/80 dark:hover:bg-white/30 text-gray-800 dark:text-white font-medium py-2.5 px-3 rounded-lg transition-all duration-200 flex items-center justify-center gap-1.5 backdrop-blur-sm"
            title="View details">
            @((MarkupString)SvgIcons.Eye)
            <span>View</span>
        </button>
    </div>
</div>

